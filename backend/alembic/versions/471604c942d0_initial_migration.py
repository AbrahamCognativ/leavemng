"""Initial migration

Revision ID: 471604c942d0
Revises:
Create Date: 2025-05-01 18:48:11.659154

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '471604c942d0'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('leave_types',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('code', sa.Enum('annual', 'sick', 'unpaid', 'compassionate', 'maternity', 'paternity', 'custom', name='leavecodeenum'), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('default_allocation_days', sa.Integer(), nullable=False),
    sa.Column('custom_code', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('org_units',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('parent_unit_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['parent_unit_id'], ['org_units.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('leave_policies',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('org_unit_id', sa.UUID(), nullable=False),
    sa.Column('leave_type_id', sa.UUID(), nullable=False),
    sa.Column('allocation_days_per_year', sa.Numeric(), nullable=False),
    sa.Column('accrual_frequency', sa.Enum('monthly', 'quarterly', 'yearly', 'one_time', name='accrualfrequencyenum'), nullable=False),
    sa.Column('accrual_amount_per_period', sa.Numeric(), nullable=True),
    sa.ForeignKeyConstraint(['leave_type_id'], ['leave_types.id'], ),
    sa.ForeignKeyConstraint(['org_unit_id'], ['org_units.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('role_band', sa.String(), nullable=False),
    sa.Column('role_title', sa.String(), nullable=False),
    sa.Column('passport_or_id_number', sa.String(), nullable=False),
    sa.Column('profile_image_url', sa.String(), nullable=True),
    sa.Column('manager_id', sa.UUID(), nullable=True),
    sa.Column('org_unit_id', sa.UUID(), nullable=True),
    sa.Column('extra_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['manager_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['org_unit_id'], ['org_units.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('passport_or_id_number')
    )
    op.create_table('audit_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('resource_type', sa.String(), nullable=False),
    sa.Column('resource_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('extra_metadata', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('leave_balances',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('leave_type_id', sa.UUID(), nullable=False),
    sa.Column('balance_days', sa.Numeric(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['leave_type_id'], ['leave_types.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('leave_requests',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('leave_type_id', sa.UUID(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('total_days', sa.Numeric(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'approved', 'rejected', 'cancelled', name='leavestatusenum'), nullable=False),
    sa.Column('applied_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('decision_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('decided_by', sa.UUID(), nullable=True),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['decided_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['leave_type_id'], ['leave_types.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('leave_documents',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('request_id', sa.UUID(), nullable=False),
    sa.Column('file_path', sa.String(), nullable=False),
    sa.Column('file_name', sa.String(), nullable=False),
    sa.Column('uploaded_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['request_id'], ['leave_requests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('leave_documents')
    op.drop_table('leave_requests')
    op.drop_table('leave_balances')
    op.drop_table('audit_logs')
    op.drop_table('users')
    op.drop_table('leave_policies')
    op.drop_table('org_units')
    op.drop_table('leave_types')
    # ### end Alembic commands ###

